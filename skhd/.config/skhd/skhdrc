cmd - return : /Applications/Alacritty.app/Contents/MacOS/alacritty

cmd + alt - w : skhd --reload
# close focused window
#shift + alt - q : chunkc tiling::window --close

# focus window in bsp mode
# ctrl + alt - h: yabai -m window --focus west
# ctrl + alt - j: yabai -m window --focus south
# ctrl + alt - k: yabai -m window --focus north
# ctrl + alt - l: yabai -m window --focus east
cmd - h: yabai -m window --focus west
cmd - j: yabai -m window --focus south
cmd - k: yabai -m window --focus north
cmd - l: yabai -m window --focus east

# move window to space
cmd + shift - 1 : yabai -m window --space 1
cmd + shift - 2 : yabai -m window --space 2
cmd + shift - 3 : yabai -m window --space 3
cmd + shift - 4 : yabai -m window --space 4
cmd + shift - 5 : yabai -m window --space 5
cmd + shift - 6 : yabai -m window --space 6
cmd + shift - 7 : yabai -m window --space 7
cmd + shift - 8 : yabai -m window --space 8
cmd + shift - 9 : yabai -m window --space 9

cmd + alt - t : yabai -m window --toggle zoom-parent
cmd + alt - f : yabai -m window --toggle zoom-fullscreen

#alt - e : yabai -m space --layout bsp
#alt - s : yabai -m space --layout stack
#alt - f : yabai -m window --toggle float

#ctrl - down : yabai -m window --focus stack.next || yabai -m window --focus south
#ctrl - up : yabai -m window --focus stack.prev || yabai -m window --focus north
#ctrl + alt - left : yabai -m window --focus west
#ctrl + alt - right : yabai -m window --focus east

# FIRST DO THIS: https://github.com/koekeishiya/yabai/wiki/Disabling-System-Integrity-Protection
# alt - 1 : yabai -m space --focus 1
# alt - 2 : yabai -m space --focus 2
# alt - 3 : yabai -m space --focus 3
# alt - 4 : yabai -m space --focus 4
# alt - 5 : yabai -m space --focus 5
# alt - 6 : yabai -m space --focus 6



























#  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#                     be found at https://github.com/koekeishiya/skhd/issues/1
#
#                     A hotkey is written according to the following rules:
#
#                       hotkey       = <mode> '<' <action> | <action>
#
#                       mode         = 'name of mode' | <mode> ',' <mode>
#
#                       action       = <keysym> '[' <proc_map_lst> ']' | <keysym> '->' '[' <proc_map_lst> ']'
#                                      <keysym> ':' <command>          | <keysym> '->' ':' <command>
#                                      <keysym> ';' <mode>             | <keysym> '->' ';' <mode>
#
#                       keysym       = <mod> '-' <key> | <key>
#
#                       mod          = 'modifier keyword' | <mod> '+' <mod>
#
#                       key          = <literal> | <keycode>
#
#                       literal      = 'single letter or built-in keyword'
#
#                       keycode      = 'apple keyboard kVK_<Key> values (0x3C)'
#
#                       proc_map_lst = * <proc_map>
#
#                       proc_map     = <string> ':' <command> | <string>     '~' |
#                                      '*'      ':' <command> | '*'          '~'
#
#                       string       = '"' 'sequence of characters' '"'
#
#                       command      = command is executed through '$SHELL -c' and
#                                      follows valid shell syntax. if the $SHELL environment
#                                      variable is not set, it will default to '/bin/bash'.
#                                      when bash is used, the ';' delimeter can be specified
#                                      to chain commands.
#
#                                      to allow a command to extend into multiple lines,
#                                      prepend '\' at the end of the previous line.
#
#                                      an EOL character signifies the end of the bind.
#
#                       ->           = keypress is not consumed by skhd
#
#                       *            = matches every application not specified in <proc_map_lst>
#
#                       ~            = application is unbound and keypress is forwarded per usual, when specified in a <proc_map>
#
#  NOTE(koekeishiya): A mode is declared according to the following rules:
#
#                       mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |
#                                   '::' <name> '@'               | '::' <name>
#
#                       name      = desired name for this mode,
#
#                       @         = capture keypresses regardless of being bound to an action
#
#                       command   = command is executed through '$SHELL -c' and
#                                   follows valid shell syntax. if the $SHELL environment
#                                   variable is not set, it will default to '/bin/bash'.
#                                   when bash is used, the ';' delimeter can be specified
#                                   to chain commands.
#
#                                   to allow a command to extend into multiple lines,
#                                   prepend '\' at the end of the previous line.
#
#                                   an EOL character signifies the end of the bind.

# add an on_enter command to the default mode
# :: default : chunkc border::color 0xff775759
#
# defines a new mode 'test' with an on_enter command, that captures keypresses
# :: test @ : chunkc border::color 0xff24ccaa
#
# from 'default' mode, activate mode 'test'
# cmd - x ; test
#
# from 'test' mode, activate mode 'default'
# test < cmd - x ; default
#
# launch a new terminal instance when in either 'default' or 'test' mode
# default, test < cmd - return : open -na /Applications/Terminal.app

# application specific bindings
#
# cmd - n [
#     "kitty"       : echo "hello kitty"
#     *             : echo "hello everyone"
#     "qutebrowser" : echo "hello qutebrowser"
#     "terminal"    ~
#     "finder"      : false
# ]

# specify a file that should be included as an additional config-file.
# treated as an absolutepath if the filename begins with '/' otherwise
# the file is relative to the path of the config-file it was loaded from.
#
# .load "/Users/Koe/.config/partial_skhdrc"
# .load "partial_skhdrc"

# prevent skhd from monitoring events for specific applications.
#
# .blacklist [
#    "kitty"
#    "terminal"
#    "qutebrowser"
# ]

#cmd - j : chunkc tiling::window --focus prev
#cmd - k : chunkc tiling::window --focus next

# create desktop, move window and follow focus
#shift + cmd - n : chunkc tiling::desktop --create;\
                  #id=$(chunkc tiling::query --desktops-for-monitor $(chunkc tiling::query --monitor-for-desktop $(chunkc tiling::query --desktop id)));\
                  #chunkc tiling::window --send-to-desktop $(echo ${id##* });\
                  #chunkc tiling::desktop --focus $(echo ${id##* })

# create desktop and follow focus
#cmd + alt - n : chunkc tiling::desktop --create;\
                #id=$(chunkc tiling::query --desktops-for-monitor $(chunkc tiling::query --monitor-for-desktop $(chunkc tiling::query --desktop id)));\
                #chunkc tiling::desktop --focus $(echo ${id##* })
# destroy desktop
#cmd + alt - w : chunkc tiling::desktop --annihilate

# fast focus desktop
#cmd + alt - x : chunkc tiling::desktop --focus $(chunkc get _last_active_desktop)
#cmd + alt - z : chunkc tiling::desktop --focus prev
#cmd + alt - c : chunkc tiling::desktop --focus next
#cmd + alt - 1 : chunkc tiling::desktop --focus 1
#cmd + alt - 2 : chunkc tiling::desktop --focus 2
#cmd + alt - 3 : chunkc tiling::desktop --focus 3
#cmd + alt - 4 : chunkc tiling::desktop --focus 4
#cmd + alt - 5 : chunkc tiling::desktop --focus 5
#cmd + alt - 6 : chunkc tiling::desktop --focus 6
#cmd + alt - 7 : chunkc tiling::desktop --focus 7
#cmd + alt - 8 : chunkc tiling::desktop --focus 8
#cmd + alt - 9 : chunkc tiling::desktop --focus 9
#cmd + alt - 0 : chunkc tiling::desktop --focus 10

# send window to desktop and follow focus
#shift + cmd - x : chunkc tiling::window --send-to-desktop $(chunkc get _last_active_desktop); chunkc tiling::desktop --focus $(chunkc get _last_active_desktop)
#shift + cmd - z : chunkc tiling::window --send-to-desktop prev; chunkc tiling::desktop --focus prev
#shift + cmd - c : chunkc tiling::window --send-to-desktop next; chunkc tiling::desktop --focus next
#shift + cmd - 1 : chunkc tiling::window --send-to-desktop 1; chunkc tiling::desktop --focus 1
#shift + cmd - 2 : chunkc tiling::window --send-to-desktop 2; chunkc tiling::desktop --focus 2
#shift + cmd - 3 : chunkc tiling::window --send-to-desktop 3; chunkc tiling::desktop --focus 3
#shift + cmd - 4 : chunkc tiling::window --send-to-desktop 4; chunkc tiling::desktop --focus 4
#shift + cmd - 5 : chunkc tiling::window --send-to-desktop 5; chunkc tiling::desktop --focus 5
#shift + cmd - 6 : chunkc tiling::window --send-to-desktop 6; chunkc tiling::desktop --focus 6
#shift + cmd - 7 : chunkc tiling::window --send-to-desktop 7; chunkc tiling::desktop --focus 7
#shift + cmd - 8 : chunkc tiling::window --send-to-desktop 8; chunkc tiling::desktop --focus 8
#shift + cmd - 9 : chunkc tiling::window --send-to-desktop 9; chunkc tiling::desktop --focus 9
#shift + cmd - 0 : chunkc tiling::window --send-to-desktop 10; chunkc tiling::desktop --focus 10

# focus monitor
#ctrl + alt - z  : chunkc tiling::monitor -f prev
#ctrl + alt - c  : chunkc tiling::monitor -f next
#ctrl + alt - 1  : chunkc tiling::monitor -f 1
#ctrl + alt - 2  : chunkc tiling::monitor -f 2
#ctrl + alt - 3  : chunkc tiling::monitor -f 3

# send window to monitor and follow focus
#ctrl + cmd - z  : chunkc tiling::window --send-to-monitor prev; chunkc tiling::monitor -f prev
#ctrl + cmd - c  : chunkc tiling::window --send-to-monitor next; chunkc tiling::monitor -f next
#ctrl + cmd - 1  : chunkc tiling::window --send-to-monitor 1; chunkc tiling::monitor -f 1
#ctrl + cmd - 2  : chunkc tiling::window --send-to-monitor 2; chunkc tiling::monitor -f 2
#ctrl + cmd - 3  : chunkc tiling::window --send-to-monitor 3; chunkc tiling::monitor -f 3

# increase region size
#shift + alt - a : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge west
#shift + alt - s : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge south
#shift + alt - w : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge north
#shift + alt - d : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge east
#
# decrease region size
#shift + cmd - a : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge west
#shift + cmd - s : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge south
#shift + cmd - w : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge north
#shift + cmd - d : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge east

# set insertion point for focused container
#ctrl + alt - f : chunkc tiling::window --use-insertion-point cancel
#ctrl + alt - h : chunkc tiling::window --use-insertion-point west
#ctrl + alt - j : chunkc tiling::window --use-insertion-point south
#ctrl + alt - k : chunkc tiling::window --use-insertion-point north
#ctrl + alt - l : chunkc tiling::window --use-insertion-point east

# rotate tree
#alt - r : chunkc tiling::desktop --rotate 90

# mirror tree y-axis
#alt - y : chunkc tiling::desktop --mirror vertical

# mirror tree x-axis
#alt - x : chunkc tiling::desktop --mirror horizontal

# toggle desktop offset
#alt - a : chunkc tiling::desktop --toggle offset

# toggle window fullscreen
#alt - f : chunkc tiling::window --toggle fullscreen

# toggle window native fullscreen
#shift + alt - f : chunkc tiling::window --toggle native-fullscreen

# toggle window parent zoom
#alt - d : chunkc tiling::window --toggle parent

# toggle window split type
#alt - e : chunkc tiling::window --toggle split

# toggle window fade
#alt - q : chunkc tiling::window --toggle fade

# float / unfloat window and center on screen
#alt - t : chunkc tiling::window --toggle float;\
          #chunkc tiling::window --grid-layout 4:4:1:1:2:2

# toggle sticky
#alt - s : chunkc tiling::window --toggle sticky

# toggle sticky, float and resize to picture-in-picture size
#alt - p : chunkc tiling::window --toggle sticky;\
          #chunkc tiling::window --grid-layout 5:5:4:0:1:1

# float next window to be tiled
#shift + alt - t : chunkc set window_float_next 1

# change layout of desktop
#ctrl + alt - a : chunkc tiling::desktop --layout bsp
#ctrl + alt - s : chunkc tiling::desktop --layout monocle
#ctrl + alt - d : chunkc tiling::desktop --layout float

#ctrl + alt - w : chunkc tiling::desktop --deserialize ~/.chunkwm_layouts/dev_1

