# # set -ga terminal-overrides ",xterm-256color*:Tc"
# set -g default-terminal "screen-256color"

# AS PER :checkhealth reccomendation
# set-option -g default-terminal "xterm-256color"
# set-option -g default-terminal "screen-256color" # DISABLED ON Mon 29 Apr 2024 11:19

# FROM: https://github.com/folke/lsp-colors.nvim#making-undercurls-work-properly-in-tmux
# Undercurl
# set -g default-terminal "${TERM}"
set -g default-terminal "alacritty"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

set-option -ga terminal-overrides ',xterm-256color:Tc'

set-option -g renumber-windows on
set-option -g history-limit 50000

set -g mouse on

set -g @continuum-restore 'on'
set -g @resurrect-strategy-nvim 'session'
# set -g @resurrect-capture-pane-contents 'on' # NOT SURE WHAT THIS DOES? DIDNT SEEM TO DO ANYTHYING
# FOR ME

unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

bind r source-file ~/.tmux.conf
set -g base-index 1


# CLIPBOARD STUFF
# FROM: https://github.com/tmux/tmux/wiki/Clipboard
set -s set-clipboard on
set -as terminal-features ',xterm-256color:clipboard'


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
set-window-option -g mode-keys vi

# bind -T copy-mode-vi v send-keys -X begin-selection
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Ctrl + [ to enter tmux vi copy mode
# Move around with vim navigation keys
# Begin highlight with Space
# Copy with Enter
# Paste with Ctrl + ]
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Open new splits in the same directory as the current pane
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# vim-like pane switching
bind -r ^ last-window
bind -r Tab switch-client -l
# bind -r k select-pane -U
# bind -r j select-pane -D
# bind -r h select-pane -L
# bind -r l select-pane -R

# bind -r K resize-pane -U 5
# bind -r J resize-pane -D 5
# bind -r H resize-pane -L 5
# bind -r L resize-pane -R 5

bind -r -T root M-k select-pane -U
bind -r -T root M-j select-pane -D
bind -r -T root M-h select-pane -L
bind -r -T root M-l select-pane -R

bind -r -T root M-H swap-pane -D
bind -r -T root M-J swap-pane -D
bind -r -T root M-K swap-pane -U
bind -r -T root M-L swap-pane -U
# bind -r -T root M-H swap-pane -L - NO SUCH THING, JUST KEEP HITTING M-K and M-J TO KEEP ROTATING
# UNTIL ITS RIGHT...
# bind -r -T root M-L swap-pane -R

# bind -r -T root M-o resize-pane -U 5
# bind -r -T root M-i resize-pane -D 5
# bind -r -T root M-u resize-pane -L 5
# bind -r -T root M-p resize-pane -R 5
bind -r -T root M-y resize-pane -L 5
bind -r -T root M-u resize-pane -D 5
bind -r -T root M-i resize-pane -U 5
bind -r -T root M-o resize-pane -R 5

# bind -r D neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/.dotfiles/personal/todo.md"

# forget the find window.  That is for chumps
# bind-key -r f run-shell "tmux neww ~/.local/bin/tmux-sessionizer"

# bind-key -r i run-shell "tmux neww tmux-cht.sh"
# bind-key -r G run-shell "~/.local/bin/tmux-sessionizer ~/work/nrdp"
# bind-key -r C run-shell "~/.local/bin/tmux-sessionizer ~/work/tvui"
# bind-key -r R run-shell "~/.local/bin/tmux-sessionizer ~/work/milo"
# # bind-key -r L run-shell "~/.local/bin/tmux-sessionizer ~/work/hpack"
# bind-key -r H run-shell "~/.local/bin/tmux-sessionizer ~/personal/vim-with-me"
# bind-key -r T run-shell "~/.local/bin/tmux-sessionizer ~/personal/refactoring.nvim"
# bind-key -r N run-shell "~/.local/bin/tmux-sessionizer ~/personal/harpoon"
# bind-key -r S run-shell "~/.local/bin/tmux-sessionizer ~/personal/developer-productivity"

# bind-key -r H run-shell "~/.local/bin/tmux-sessionizer ~/Projects.Git/POR/src"


# bind-key -r -T prefix       M-Up              resize-pane -U 5
# bind-key -r -T prefix       M-Down            resize-pane -D 5
# bind-key -r -T prefix       M-Left            resize-pane -L 5
# bind-key -r -T prefix       M-Right           resize-pane -R 5
# bind-key -r -T prefix       C-Up              resize-pane -U
# bind-key -r -T prefix       C-Down            resize-pane -D
# bind-key -r -T prefix       C-Left            resize-pane -L
# bind-key -r -T prefix       C-Right           resize-pane -R

# set -g status-bg #414868

source-file ~/.dotfiles/tmux/tokyonight.tmuxtheme

# --------------------------------------------------
# List of plugins
# --------------------------------------------------
# PREFIX + I TO INSTALL PLUGINS
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin "janoamaral/tokyo-night-tmux"

set -g @plugin 'tmux-plugins/tmux-resurrect' # save and restore tmux environment
# prefix + Ctrl-s to save
# prefix + Ctrl-r to restore

# AUTO SAVES SESSIONS AND RESTORES ON REBOOT
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'wfxr/tmux-fzf-url' # https://github.com/wfxr/tmux-fzf-url
# set -g @fzf-url-history-limit '2000'
# set -g @fzf-url-bind 'u' # DEFAULT
# --------------------------------------------------

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'



# THESE HAVE TO MATCH WHAT YOU HAVE IN YOUR .zshrc! ~/.zshrc, beginning-of-line, and end-of-line
bind-key -n Home send Escape "[H"
bind-key -n End send Escape "[F"



# REMOVES THE DELAY WHEN PRESSING ESCAPE
set -sg escape-time 0


# --------------------------------------------------
# HANDLING NESTED SESSIONS
# --------------------------------------------------
# FROM: https://gist.github.com/samoshkin/05e65f7f1c9b55d3fc7690b59d678734

color_status_text="colour245"
color_window_off_status_bg="colour238"
color_light="white" #colour015
color_dark="colour232" # black= colour232
color_window_off_status_current_bg="colour254"

# bind -T root F12  \
#   set prefix None \;\
#   set key-table off \;\
#   set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
#   set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
#   set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
#   if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
#   refresh-client -S \;\

# bind -T off F12 \
#   set -u prefix \;\
#   set -u key-table \;\
#   set -u status-style \;\
#   set -u window-status-current-style \;\
#   set -u window-status-current-format \;\
#   refresh-client -S

# wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"

bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
  set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T root MouseDown1StatusLeft \
	set prefix None \;\
	set key-table off \;\
	set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
	set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
	if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
	refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  refresh-client -S

bind -T off MouseDown1StatusLeft \
	set -u prefix \;\
	set -u key-table \;\
	set -u status-style \;\
	set -u window-status-current-style \;\
	refresh-client -S

# this seems to be bound to middle mouse button already...?
# bind -T root MouseDown2StatusLeft \
# 	choose-tree

wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"

# set -g status-right "$wg_is_keys_off #{sysstat_cpu} | #{sysstat_mem} | #{sysstat_loadavg} | $wg_user_host"
# set -g status-right "$wg_is_keys_off #{sysstat_cpu} | #{sysstat_mem} | #{sysstat_loadavg} | $wg_user_host"

# Needs to be at the bottom since something is nuking this setting when you have it higher up
# KEEP SELECTION ONCE HIGHLIGHTED USING MOUSE, FROM: https://github.com/tmux/tmux/issues/140#issuecomment-321144647
unbind -T copy-mode-vi MouseDragEnd1Pane


# --------------------------------------------------
# SESSION SHORTCUT KEYS
# --------------------------------------------------
# bind -r -T root M-` run-shell "tmux list-sessions -F#S | sort | fzf | xargs -r tmux switch -t"
bind -r -T root M-0 switch -t Personal
bind -r -T root M-1 switch -t Work
bind -r -T root M-2 switch -t Work_Build
